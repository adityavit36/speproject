---
- hosts: ec2
  become: yes
  vars:
    project_dir: /home/ec2-user/spe-project
    ansible_python_interpreter: /usr/bin/python3  # Ensure Ansible uses the correct Python interpreter
  tasks:
    - name: Gathering Facts
      setup:
    - name: Ensure Docker service is running
      systemd:
        name: docker
        state: started
        enabled: yes
    - name: Install Docker Compose using pip
      pip:
        name: docker-compose
        state: present
    - name: Pull Docker images
      docker_image:
        name: "{{ item }}"
        source: pull
      loop:
        - "adityavit36/carprice:latest"
        - "adityavit36/predictor-app:latest"
        - "adityavit36/model-loader:latest"
        - "docker.elastic.co/elasticsearch/elasticsearch:7.17.9"
        - "docker.elastic.co/kibana/kibana:7.17.9"
        - "docker.elastic.co/logstash/logstash:7.17.9"
        - "docker.elastic.co/beats/filebeat:7.17.9"
    - name: Create Docker Compose file
      copy:
        content: |
          version: '3'
          services:
            model-loader:
              image: adityavit36/model-loader
            predictor:
              image: adityavit36/predictor-app
              ports:
                - "5000:5000"
              depends_on:
                - model-loader
              environment:
                - MODEL_PATH=/app
            carprice:
              image: adityavit36/carprice
              ports:
                - "3000:3000"
              environment:
                - PREDICTOR_URL=http://predictor:5000/predict
                - PREDICTOR_URL=http://65.0.248.48:5000/predict
            elasticsearch:
              image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
              environment:
                - discovery.type=single-node
              ports:
                - "9200:9200"
            kibana:
              image: docker.elastic.co/kibana/kibana:7.17.9
              ports:
                - "5601:5601"
              depends_on:
                - elasticsearch
            logstash:
              image: docker.elastic.co/logstash/logstash:7.17.9
              ports:
                - "5044:5044"
              depends_on:
                - elasticsearch
              volumes:
                - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
            filebeat:
              image: docker.elastic.co/beats/filebeat:7.17.9
              depends_on:
                - logstash
              volumes:
                - ./filebeat.yml:/usr/share/filebeat/filebeat.yml
                - /var/lib/docker/containers:/var/lib/docker/containers:ro
                - /var/run/docker.sock:/var/run/docker.sock:ro
    - name: Create Logstash configuration file
      copy:
        content: |
          input {
            beats {
              port => 5044
            }
          }
          output {
            elasticsearch {
              hosts => ["http://elasticsearch:9200"]
              index => "logstash-%{+YYYY.MM.dd}"
            }
          }
        dest: "{{ project_dir }}/logstash.conf"

    - name: Create Filebeat configuration file
      copy:
        content: |
          filebeat.inputs:
            - type: container
              paths:
                - /var/lib/docker/containers/*/*.log
          output.logstash:
            hosts: ["logstash:5044"]
        dest: "{{ project_dir }}/filebeat.yml"

    - name: Run Docker Compose
      command: docker-compose up -d
      args:
        chdir: "{{ project_dir }}"
      register: docker_compose_output
      ignore_errors: yes
